cmake_minimum_required (VERSION 3.2)
set(CMAKE_DISABLE_SOURCE_CHANGES ON)
set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)

# Visual Studio misbehaves unless you set all of these
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)

set(SPALAX_OS chibios)

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../shared ${CMAKE_CURRENT_BINARY_DIR}/shared)
add_subdirectory(src)

add_library(spalax.firmware.shared ${HEADERS} ${SOURCES} ${CMAKELISTS})
set(CMAKE_C_FLAGS ${ADDITIONAL_C_FLAGS})
set_property(TARGET spalax.firmware.shared PROPERTY C_STANDARD 11)

SET (SPALAX_FIRMWARE_SHARED_INCLUDES
    ${CMAKE_CURRENT_SOURCE_DIR}/src
	${SPALAX_SHARED_INCLUDES}
)

get_directory_property(hasParent PARENT_DIRECTORY)
if (hasParent)
	SET(SPALAX_FIRMWARE_SHARED_INCLUDES ${SPALAX_FIRMWARE_SHARED_INCLUDES} PARENT_SCOPE)
endif()

target_include_directories ( spalax.shared PUBLIC
    ${SPALAX_FIRMWARE_SHARED_INCLUDES}
)

target_link_libraries( spalax.firmware.shared PUBLIC spalax.shared)
